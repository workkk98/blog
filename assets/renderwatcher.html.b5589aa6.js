import{e as n}from"./app.3c7f3972.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="watcher" tabindex="-1"><a class="header-anchor" href="#watcher" aria-hidden="true">#</a> watcher</h1><h4 id="renderwatcher" tabindex="-1"><a class="header-anchor" href="#renderwatcher" aria-hidden="true">#</a> RenderWatcher</h4><p>\u5728\u6211\u770B\u6765watcher\u5BF9\u8C61\u5BF9\u4E8EVue\u6765\u8BF4\u975E\u5E38\u91CD\u8981\u3002\u4E4B\u524D\u603B\u662F\u60F3\u4E0D\u660E\u767DVue\u662F\u600E\u4E48\u66F4\u65B0\u89C6\u56FE\u7684\uFF0C\u4EE5\u53CAbeforeUpdate\u3001updated\u8FD9\u4E24\u4E2A\u94A9\u5B50\u51FD\u6570\u7684\u7531\u6765\u3002 \u79D8\u5BC6\u5176\u5B9E\u85CF\u5728$mount()\u4E2D\uFF0C\u4ED4\u7EC6\u770B$mount()\u51FD\u6570\u4E2D\u7684mountcomponent\u51FD\u6570\u4E2D\u7684\u4EE3\u7801\u7247\u6BB5\uFF0C\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// we set this to vm._watcher inside the watcher&#39;s constructor</span>
  <span class="token comment">// since the watcher&#39;s initial patch may call $forceUpdate (e.g. inside child</span>
  <span class="token comment">// component&#39;s mounted hook), which relies on vm._watcher being already defined</span>
  <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> updateComponent<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">before</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">before</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeUpdate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* isRenderWatcher */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hydrating <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5728\u8FD9\u6BB5\u4EE3\u7801\u4E2D\u6709\u521B\u5EFA\u4E00\u4E2Awatcher\uFF0C\u8FD9\u4E2Awatcher\u5B9E\u9645\u4E0A\u5C31\u662F<strong>renderwatcher</strong>\u5BF9\u8C61\u3002Vue\u7ED9\u5B83\u4F20\u9012\u4E86\u4E00\u4E2A\u51FD\u6570updateComponent\u3002\u800C\u4E14watcher\u5728new\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5DF2\u7136\u628A\u81EA\u5DF1\u8D4B\u503C\u7ED9\u4E86Dep.target\uFF0C\u5728\u540E\u7EED\u4F9D\u8D56\u6536\u96C6\u65F6\uFF0C\u8BE5<strong>renderwatcher</strong>\u5C31\u4F1A\u88AB\u6536\u96C6\u5230data\u7684dep\u4E2D\u3002\u5177\u4F53\u6536\u96C6\u8FC7\u7A0B\u5C31\u662F\u5F53watcher\u8C03\u7528\u8FD9\u4E2AupdateComponent\u51FD\u6570\u65F6\uFF0C\u5148\u8C03\u7528\u4E86render\u51FD\u6570(render\u51FD\u6570\u662F\u7528\u6237\u624B\u5199\u6A21\u7248\u540E\u7F16\u8BD1\u6210\u7684\uFF0C\u4E5F\u53EF\u80FD\u662F\u7528\u6237\u7528JSX\u624B\u5199\u7684,render\u51FD\u6570\u7C7B\u4F3C\u4E8E\u4E0B\u65B9\u4EE3\u7801)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;renderwatcher&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5F53\u6267\u884Crender\u51FD\u6570\u65F6\uFF0C<strong>renderwatcher</strong>\u5C31\u88AB\u6536\u5165\u4E86this.title\u7684dep\u4E2D\u3002\u6240\u4EE5\u5F53title\u66F4\u65B0\u65F6\uFF0C<strong>renderwatcher</strong>\u5C31\u4F1A\u89E6\u53D1\u66F4\u65B0\u4E8B\u4EF6\u3002</p><h4 id="update\u94A9\u5B50" tabindex="-1"><a class="header-anchor" href="#update\u94A9\u5B50" aria-hidden="true">#</a> update\u94A9\u5B50</h4><p>\u5728\u6211\u4EEC\u4E4B\u524Dnew watcher\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u8FD8\u4F20\u9012\u4E86\u4E00\u4E2Abefore\u53C2\u6570\u3002before\u53C2\u6570\u91CC\u5B9E\u9645\u4E0A\u5C31\u662F\u8C03\u7528\u4E86beforeupdate\u7684\u94A9\u5B50\u51FD\u6570\uFF0C\u800C\u8C03\u7528\u5B83\u7684\u65F6\u673A\uFF0C\u53EF\u4EE5\u4ED4\u7EC6\u770B\u8FD9\u4E2AflushSchedulerQueue\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token doc-comment comment">/**
   * Flush both queues and run the watchers.
   */</span>
  <span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    currentFlushTimestamp <span class="token operator">=</span> <span class="token function">getNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    flushing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> watcher<span class="token punctuation">,</span> id<span class="token punctuation">;</span>

    <span class="token comment">// Sort queue before flush.</span>
    <span class="token comment">// This ensures that:</span>
    <span class="token comment">// 1. Components are updated from parent to child. (because parent is always</span>
    <span class="token comment">//    created before the child)</span>
    <span class="token comment">// 2. A component&#39;s user watchers are run before its render watcher (because</span>
    <span class="token comment">//    user watchers are created before the render watcher)</span>
    <span class="token comment">// 3. If a component is destroyed during a parent component&#39;s watcher run,</span>
    <span class="token comment">//    its watchers can be skipped.</span>
    queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// do not cache length because more watchers might be pushed</span>
    <span class="token comment">// as we run existing watchers</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher <span class="token operator">=</span> queue<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>before<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
      has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      watcher<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// in dev build, check and stop circular updates.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token constant">MAX_UPDATE_COUNT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&#39;You may have an infinite update loop &#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>
              watcher<span class="token punctuation">.</span>user
                <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token string">&quot;in watcher with expression \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token operator">:</span> <span class="token string">&quot;in a component render function.&quot;</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
            watcher<span class="token punctuation">.</span>vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// keep copies of post queues before resetting state</span>
    <span class="token keyword">var</span> activatedQueue <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> updatedQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">resetSchedulerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// call component updated and activated hooks</span>
    <span class="token function">callActivatedHooks</span><span class="token punctuation">(</span>activatedQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">callUpdatedHooks</span><span class="token punctuation">(</span>updatedQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// devtool hook</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>devtools <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>devtools<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      devtools<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;flush&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>\u5F53watcher\u5B58\u5728before\u51FD\u6570\u65F6\uFF0C\u5148\u6267\u884Cbefore\u51FD\u6570\u5373\u8C03\u7528beforeUpdate\u94A9\u5B50\u51FD\u6570\u3002\u5F85\u6240\u6709watcher\u66F4\u65B0\u5B8C\u6210\u540E\u540E\uFF0C\u6267\u884Cupdated\u94A9\u5B50\u51FD\u6570\u3002</p>`,11);function t(e,c){return p}var l=s(a,[["render",t]]);export{l as default};
