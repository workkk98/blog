import{e as t}from"./app.3c7f3972.js";import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";const r={},n=t('<h1 id="\u7B2C\u4E00\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u7AE0" aria-hidden="true">#</a> \u7B2C\u4E00\u7AE0</h1><p>\u4E00\u3001\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u5B9A\u4E49 In\xA0computer science,\xA0functional programming\xA0is a\xA0programming paradigm\xA0where programs are constructed by\xA0applying\xA0and\xA0composing\xA0functions. It is a\xA0declarative programming\xA0paradigm in which function definitions are\xA0trees\xA0of\xA0expressions\xA0that map\xA0values\xA0to other values, rather than a sequence of\xA0imperative\xA0statements\xA0which update the\xA0running state\xA0of the program. \u6458\u6284\u81EAwiki</p><p>\u51FD\u6570\u5F0F\u7F16\u7A0B\u6838\u5FC3\u5C31\u5728\u4E8E\u4EE5\u58F0\u660E\u5F0F\u7684\u51FD\u6570\uFF0C\u901A\u8FC7\u7EC4\u5408\u5E94\u7528\u51FD\u6570\u7684\u65B9\u5F0F\u6784\u5EFA\u51FA\u7A0B\u5E8F\u3002 \u6211\u4EEC\u5148\u770B\u4E00\u4E2A\u5C0F\u4F8B\u5B50\uFF0C\u770B\u770B\u5B83\u76F8\u6BD4\u4E8E\u547D\u4EE4\u5F0F\u7F16\u7A0B\u6709\u4EC0\u4E48\u533A\u522B\u3002 code ~/playground/functional_programming</p><p>\u547D\u4EE4\u5F0F\u7F16\u7A0B\uFF1A \u4EE3\u7801\u63CF\u8FF0\u7528\u6765\u8FBE\u6210\u671F\u671B\u7ED3\u679C\u7684\u7279\u5B9A\u6B65\u9AA4\u63A7\u5236\u6D41 \u8FD9\u79CD\u5448\u73B0\u51FA\u6765\u7684\u4EE3\u7801\u7ED3\u6784\uFF0C\u5F80\u5F80\u662Fif\u3001esle\uFF0Cfor\uFF0Cwhile\u7B49\u8BED\u53E5\u5757\u7EC4\u6210\u3002</p><p>\u58F0\u660E\u5F0F\u8BED\u53E5\uFF1A \u7A0B\u5E8F\u62BD\u8C61\u4E86\u63A7\u5236\u6D41\u8FC7\u7A0B\u4E3E\u4E2A\u4F8B\u5B50SQL\u8BED\u53E5\uFF0C\u4EE3\u7801\u5177\u4F53\u63CF\u8FF0\u7684\u662F\u6570\u636E\u6D41 \u8FD9\u79CD\u5448\u73B0\u51FA\u6765\u7684\u4EE3\u7801\u7ED3\u6784\u5F80\u5F80\u662F\u7EC4\u5408\u7684\u51FD\u6570\u3002 \u4E8C\u3001\u4E00\u4E9B\u7406\u8BBA\u57FA\u7840 2.1 \u51FD\u6570\u662F\u4E00\u7B49\u516C\u6C11 \u4E00\u7B49\u516C\u6C11\u6307\u51FD\u6570\u5728js\u91CC\u65E2\u53EF\u4EE5\u88AB\u8D4B\u503C\u7ED9\u53D8\u91CF\uFF0C\u53C8\u53EF\u4EE5\u505A\u51FD\u6570\u53C2\u6570\uFF0C\u4E5F\u53EF\u4EE5\u505A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u3002 2.2 \u7EAF\u51FD\u6570 \u76F8\u540C\u7684\u8F93\u5165\u7ED3\u679C\uFF0C\u6C38\u8FDC\u4F1A\u5F97\u5230\u76F8\u540C\u7684\u7ED3\u679C\uFF0C\u5E76\u4E14\u6CA1\u6709\u4EFB\u4F55\u53EF\u89C2\u5BDF\u7684\u526F\u4F5C\u7528\u3002 [\u56FE\u7247] \u5C31\u5982\u540C\u56FE\u4E2D\u7684\u51FD\u6570\u66F2\u7EBF\u4E00\u6837\uFF0Cy = f(x)\uFF0C\u57FA\u4E8E\u8FD9\u4E2A\u7279\u6027\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\u7EAF\u51FD\u6570\u6709\u8FD9\u4E9B\u597D\u5904\u3002</p><ol><li>\u53EF\u7F13\u5B58\u6027, \u56E0\u4E3A\u7EAF\u51FD\u6570\u7684\u539F\u56E0\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4ECE\u7F13\u5B58\u4E2D\u62FF\u53D6x\u5BF9\u5E94\u7684y\u503C const squre = memoize((x) =&gt; x**2)</li><li>\u53EF\u79FB\u690D\u6027/\u81EA\u6587\u6863\u5316 // \u4E0D\u7EAF\u7684 var signUp = function(attrs) { var user = saveUser(attrs); welcomeUser(user); };</li></ol><p>var saveUser = function(attrs) { var user = Db.save(attrs); ... };</p><p>var welcomeUser = function(user) { Email(user, ...); ... };</p><p>// \u7EAF\u7684\uFF0C\u5EF6\u8FDF\u6267\u884C\uFF0C\u4F9D\u8D56\u6CE8\u5165 var signUp = function(Db, Email, attrs) { return function() { var user = saveUser(Db, attrs); welcomeUser(Email, user); }; };</p><p>var saveUser = function(Db, attrs) { ... };</p><p>var welcomeUser = function(Email, user) { ... };</p><ol start="3"><li><p>\u53EF\u6D4B\u8BD5\u6027 \u975E\u7EAF\u51FD\u6570\u5199\u5199\u5355\u5143\u6D4B\u8BD5\u4E0A\u9700\u8981\u6784\u9020\u4E0A\u4E0B\u6587\uFF0C\u4F46\u662F\u5199\u7EAF\u51FD\u6570\u7684\u5355\u6D4B\u65B9\u9762\uFF0C\u6211\u4EEC\u6784\u9020\u63A5\u53E3\u5373\u53EF\u3002</p></li><li><p>\u5408\u7406\u6027 \u5148\u4ECB\u7ECD\u4E00\u4E2A\u6982\u5FF5\u5F15\u7528\u900F\u660E\u6027\uFF08referential transparency\uFF09\uFF1A\u5982\u679C\u4E00\u6BB5\u4EE3\u7801\u53EF\u4EE5\u66FF\u6362\u6210\u5B83\u6267\u884C\u6240\u5F97\u7684\u7ED3\u679C\uFF0C\u800C\u4E14\u662F\u5728\u4E0D\u6539\u53D8\u6574\u4E2A\u7A0B\u5E8F\u884C\u4E3A\u7684\u524D\u63D0\u4E0B\u66FF\u6362\u7684\uFF0C\u90A3\u4E48\u6211\u4EEC\u5C31\u8BF4\u8FD9\u6BB5\u4EE3\u7801\u662F\u5F15\u7528\u900F\u660E\u7684\u3002</p></li></ol><p>var Immutable = require(&#39;immutable&#39;);</p><p>var decrementHP = function(player) { return player.set(&quot;hp&quot;, player.hp-1); };</p><p>var isSameTeam = function(player1, player2) { return player1.team === player2.team; };</p><p>var punch = function(player, target) { if(isSameTeam(player, target)) { return target; } else { return decrementHP(target); } };</p><p>var jobe = Immutable.Map({name:&quot;Jobe&quot;, hp:20, team: &quot;red&quot;}); var michael = Immutable.Map({name:&quot;Michael&quot;, hp:20, team: &quot;green&quot;});</p><p>// punch\u51FD\u6570\u4EC5\u4F9D\u8D56\u5165\u53C2 punch(jobe, michael); //=&gt; Immutable.Map({name:&quot;Michael&quot;, hp:19, team: &quot;green&quot;})</p><ol start="5"><li>\u5E76\u884C\u4EE3\u7801 \u6700\u540E\u4E00\u70B9\uFF0C\u4E5F\u662F\u51B3\u5B9A\u6027\u7684\u4E00\u70B9\uFF1A\u6211\u4EEC\u53EF\u4EE5\u5E76\u884C\u8FD0\u884C\u4EFB\u610F\u7EAF\u51FD\u6570\u3002\u56E0\u4E3A\u7EAF\u51FD\u6570\u6839\u672C\u4E0D\u9700\u8981\u8BBF\u95EE\u5171\u4EAB\u7684\u5185\u5B58\uFF0C\u800C\u4E14\u6839\u636E\u5176\u5B9A\u4E49\uFF0C\u7EAF\u51FD\u6570\u4E5F\u4E0D\u4F1A\u56E0\u526F\u4F5C\u7528\u800C\u8FDB\u5165\u7ADE\u4E89\u6001\uFF08race condition\uFF09\u3002 \u5E76\u884C\u4EE3\u7801\u5728\u670D\u52A1\u7AEF js \u73AF\u5883\u4EE5\u53CA\u4F7F\u7528\u4E86 web worker \u7684\u6D4F\u89C8\u5668\u90A3\u91CC\u662F\u975E\u5E38\u5BB9\u6613\u5B9E\u73B0\u7684\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4F7F\u7528\u4E86\u7EBF\u7A0B\uFF08thread\uFF09\u3002\u4E0D\u8FC7\u51FA\u4E8E\u5BF9\u975E\u7EAF\u51FD\u6570\u590D\u6742\u5EA6\u7684\u8003\u8651\uFF0C\u5F53\u524D\u4E3B\u6D41\u89C2\u70B9\u8FD8\u662F\u907F\u514D\u4F7F\u7528\u8FD9\u79CD\u5E76\u884C\u3002</li></ol><p>\u5B9A\u4E49\u91CC\u63D0\u5230\u7684\u526F\u4F5C\u7528\uFF1A</p><ul><li>\u66F4\u6539\u6587\u4EF6\u7CFB\u7EDF\uFF08\u6BD4\u65B9\u8BF4\u4F7F\u7528storage\uFF09</li><li>\u5F80\u6570\u636E\u5E93\u63D2\u5165\u8BB0\u5F55</li><li>\u53D1\u9001\u4E00\u4E2A http \u8BF7\u6C42</li><li>\u53EF\u53D8\u6570\u636E</li><li>\u6253\u5370/log</li><li>\u83B7\u53D6\u7528\u6237\u8F93\u5165</li><li>DOM \u67E5\u8BE2</li><li>\u8BBF\u95EE\u7CFB\u7EDF\u72B6\u6001 \u603B\u7ED3\u4E00\u4E0B\u7EDD\u5927\u591A\u6570\u90FD\u662Fio\u64CD\u4F5C\u3002</li></ul><p>2.3 \u6280\u5DE7\uFF1Acurry\uFF0Ccompose curry(\u67EF\u91CC\u5316 mostly-adequate-guide-chinese\uFF09 \u8FD9\u662F\u4E00\u79CD\u6280\u5DE7\uFF0C\u901A\u8FC7\u4FDD\u5B58\u53C2\u6570\uFF0C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\u3002\u8FD9\u6709\u4EC0\u4E48\u597D\u5904\u5462\uFF1F</p><ol><li>\u8FD9\u79CD\u8C03\u7528\u65B9\u5F0F\u53EB\u505Apartial application\u3002\u53EF\u4EE5\u51CF\u5C11\u5F88\u591A\u7684boilerplate code\uFF08\u6837\u677F\u6587\u4EF6\u4EE3\u7801\uFF09 var replace = curry(function(what, replacement, str) { return str.replace(what, replacement); });</li></ol><p>// replaceCowsWithCats :: str -&gt; str var replaceCowsWithCats = replace(&#39;cows&#39;, &#39;cats&#39;); var replaceCatsWithCows = replace(&#39;cats&#39;, &#39;cows&#39;);</p><p>var replaceCowsWithCats2 = function (str) { return str.replace(&#39;cows&#39;, &#39;cats&#39;); } var replaceCstsWithCows2 = function (str) { return str.replace(&#39;cats&#39;, &#39;cows&#39;); } 2. curry\u51FD\u6570\u7B26\u5408\u7EAF\u51FD\u6570\u7684\u5B9A\u4E49\u3002\u4E00\u4E2A\u8F93\u51FA\u5BF9\u5E94\u4E00\u4E2A\u65B0\u51FD\u6570\u3002 3. \u5728\u5E76\u53D1\u7684\u573A\u666F\u6709\u5947\u6548</p><p>code ~/playground/functional_programming</p><p>compose</p><p>f(g(x)) =&gt; _.compose(f,g) \u4E00\u4E2A\u5C0F\u6280\u5DE7\uFF0C\u4E66\u5199\u987A\u5E8F\u662F\u4ECE\u53F3\u5F80\u5DE6\u3002</p><p>\u6280\u5DE7</p><ol><li>pointfree\uFF1A\u901A\u8FC7compose\u7EC4\u5408\u51FD\u6570\uFF0C\u6211\u4EEC\u751A\u81F3\u90FD\u4E0D\u9700\u8981\u5B9A\u4E49\u51FD\u6570\u7684\u53C2\u6570\u3002\u8FD9\u5C31\u5E26\u6765\u4E86\u4E00\u4E9B\u597D\u5904\uFF0C\u6BD4\u5982\u8BF4</li><li>\u4E0D\u9700\u8981\u58F0\u660E\u989D\u5916\u7684\u5165\u53C2\u540D\u79F0\u3002</li><li>\u77F3\u854A\u5B9E\u9A8C\uFF0C\u9A8C\u8BC1\u51FD\u6570\u662F\u5426\u662F\u7B26\u5408\u51FD\u6570\u5F0F\u98CE\u683C\uFF08\u5E76\u975E\u7EDD\u5BF9\uFF09 \u4E3E\u4E2A\u4F8B\u5B50: // \u51FD\u6570\u5F0F var isLastInStock = _.compose( _.prop(&#39;in_stock&#39;), _.last )</li></ol><p>// \u547D\u4EE4\u5F0F function isLastInStock2 (cars) { return cars[cars.length - 1].in_stock } 2. debug: var trace = curry(function(tag, x){ console.log(tag, x); return x; });</p><p>\u8303\u7574\u5B66 [\u56FE\u7247] \u8303\u7574\uFF1A\u5BF9\u8C61\u7684\u96C6\u5408\u3001\u6001\u5C04\u7684\u96C6\u5408\u3001\u6001\u5C04\u7684\u7EC4\u5408\u3001identity \u8FD9\u4E2A\u72EC\u7279\u7684\u6001\u5C04 2.4 Hindley-milner // strLength :: String -&gt; Number var strLength = function(s){ return s.length; }</p><p>// join :: String -&gt; ([String] -&gt; String) var join = curry(function(what, xs){ return xs.join(what); });</p><p>// match :: Regex -&gt; (String -&gt; [String]) var match = curry(function(reg, s){ return s.match(reg); });</p><p>// replace :: Regex -&gt; (String -&gt; (String -&gt; String)) var replace = curry(function(reg, sub, s){ return s.replace(reg, sub); });</p><ol><li>\u7F29\u5C0F\u53EF\u80FD\u6027\u8303\u56F4\uFF08parametricity\uFF09 // head :: [a] -&gt; a 2.\u81EA\u7531\u5B9A\u7406 // head :: [a] -&gt; a compose(f, head) == compose(head, map(f));</li></ol><p>// filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a] compose(map(f), filter(compose(p, f))) == compose(filter(p), map(f)); 3.\u7C7B\u578B\u7EA6\u675F // sort :: Ord a =&gt; [a] -&gt; [a] \u4E09\u3001functor\uFF08\u51FD\u5B50\uFF09 \u901A\u8FC7\u4E0A\u9762\u7684\u4F8B\u5B50\u5927\u5BB6\u5DF2\u7ECF\u521D\u6B65\u4E86\u89E3\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u6837\u5B50\u3002\u6570\u636E\u5728\u6211\u4EEC\u5B9A\u4E49\u597D\u7684\u7BA1\u9053\u4E2D\u6D41\u52A8\u3002 \u4F46\u6211\u4EEC\u53EA\u662F\u5C06\u6570\u636E\u53D8\u6362\u6210\u60F3\u8981\u7684\u5F62\u72B6\u3002\u4F46\u6211\u4EEC\u4E22\u5931\u4E86\u7A0B\u5E8F\u4E2D\u6700\u5173\u952E\u7684if\u5206\u652F\u3001\u5FAA\u73AF\u3002\u4E5F\u5C31\u662F\u5982\u4F55\u63A7\u5236\u6D41\uFF0C\u66F4\u522B\u8BF4\u5F02\u5E38\u5904\u7406\u3001\u5F02\u6B65\u64CD\u4F5C\u4E86\u3002 \u6700\u57FA\u7840\u7684\u5BB9\u5668Identity \u6211\u4EEC\u5148\u5F15\u51FA\u6700\u57FA\u672C\u7684Identity\u5BB9\u5668\u3002 Identity\u7684of\u65B9\u6CD5\u6709\u4E24\u4E2A\u4F18\u70B9</p><ol><li>\u907F\u514D\u4E86\u4F7F\u7528new\u5173\u952E\u5B57\uFF0C\u8FD9\u79CD\u8C03\u7528\u65B9\u5F0F\u66F4\u50CF\u662F\u51FD\u6570\u5F0F</li><li>\u521B\u9020\u4E86\u4E00\u4E2A\u9ED8\u8BA4\u4E0A\u4E0B\u6587 function Identity(x) { this.__value = x; }</li></ol><p>Identity.of = function (x) { return new Identity(x) }</p><p>\u5728\u4E4B\u524D\u7684\u4E00\u4E9B\u4F8B\u5B50\u91CC\u6211\u4EEC\u7ECF\u5E38\u4F1A\u4F7F\u7528\u5230map\u51FD\u6570\uFF0C\u5F53\u7136\u51FD\u5B50\u4E5F\u4F1A\u6709\u5BF9\u5E94\u7684\u65B9\u6CD5\u3002 Identity.prototype.map = function (f) { return Identity.of(f(this.__value)) }</p><p>Maybe\u5BB9\u5668&quot;return\u8BED\u53E5&quot; function Maybe(x) { this.__value = x }</p><p>// \u6CE8\u610F\u8BE5of\u51FD\u6570 Maybe.of = function (x) { return new Maybe(x) }</p><p>Maybe.prototype.isNothing = function (x) { return this.__value === null }</p><p>Mapbe.prototype.map = function (f) { return this.isNothing() ? Maybe.of(null) : Maybe.of(f(this.__value)) }</p><p>\u51FD\u6570\u5F0F\u7F16\u7A0B\u4E2D\u7684if\u5206\u652F\u8BED\u53E5\uFF0Ceither\u3001left\u3001right Left = function(x) { this.__value = x; }</p><p>Left.of = function(x) { return new Left(x); }</p><p>Left.prototype.map = function(f) { return this; } Left.prototype.ap = function(other) { return this; } Left.prototype.join = function() { return this; } Left.prototype.chain = function() { return this; } Left.prototype.inspect = function() { return &#39;Left(&#39;+inspect(this.__value)+&#39;)&#39;; }</p><p>Right = function(x) { this.__value = x; }</p><p>// TODO: remove in favor of Either.of Right.of = function(x) { return new Right(x); }</p><p>Right.prototype.map = function(f) { return Right.of(f(this.__value)); }</p><p>Right.prototype.join = function() { return this.__value; }</p><p>Right.prototype.chain = function(f) { return f(this.__value); }</p><p>Right.prototype.ap = function(other) { return this.chain(function(f) { return other.map(f); }); }</p><p>Right.prototype.join = function() { return this.__value; }</p><p>Right.prototype.chain = function(f) { return f(this.__value); }</p><p>Right.prototype.inspect = function() { return &#39;Right(&#39;+inspect(this.__value)+&#39;)&#39;; }</p><p>var either = curry(function(f, g, e) { switch(e.constructor) { case Left: return f(e.__value); case Right: return g(e.__value); } });</p><p>\u51FD\u6570\u5F0F\u7F16\u7A0B\u4E2D\u7684\u5F02\u6B65\u64CD\u4F5CIO functor</p><p>\u5982\u679C\u6D89\u53CA\u5230\u4E86IO\uFF0C\u90A3\u51FD\u5B50\u4E0D\u662F\u4E0D\u7EAF\u4E86\u5417\uFF1F function fetchSomething(x) { // doSomething return localStorage[x] }</p><p>IO\u51FD\u5B50\u4E0E\u5176\u4ED6functor\u6700\u5927\u7684\u4E0D\u540C\u662F\u5B83\u7684value\u662F\u4E00\u4E2A\u51FD\u6570\u3002 pointed functor: \u5B9E\u73B0of\u65B9\u6CD5\u7684functor\u3002</p><p>IO.of = function(x) { return new IO(function() { return x; }); }</p><p>IO.prototype.map = function(f) { return new IO(_.compose(f, this.unsafePerformIO)); }</p><p>IO.prototype.join = function() { return this.unsafePerformIO(); }</p><p>IO.prototype.chain = function(f) { return this.map(f).join(); }</p><p>IO.prototype.ap = function(a) { return this.chain(function(f) { return a.map(f); }); }</p><p>IO.prototype.inspect = function() { return &#39;IO(&#39;+inspect(this.unsafePerformIO)+&#39;)&#39;; }</p><p>new IO(function fetch(){}).unsafePerformIO() \u603B\u7ED3\u4E00\u4E9B\u7406\u8BBA [\u56FE\u7247] f = _.map(f)</p><p>function map(f, Functor) { return Functor.map(f(Functor.__value)) }</p><p>Monad\uFF08\u82F1\u6587\u610F\u601D\u662F\u5355\u5B50\uFF0C\u4F46\u5728\u51FD\u6570\u5F0F\u7F16\u7A0B\u91CC\u66F4\u50CF\u662F\u6D0B\u8471\uFF09</p><p>\u8FD9\u91CC\u7684\u6D0B\u8471\u4E0D\u662Fkoa\u91CC\u7684\u6D0B\u8471\u6A21\u578B\uFF0C\u7ECF\u8FC7\u4E00\u7CFB\u5217\u7684\u51FD\u6570\u8C03\u7528\u540E\uFF0C\u771F\u5B9E\u7684value\u53EF\u80FD\u4F1A\u88AB\u6D0B\u8471\u5305\u4F4F\u597D\u51E0\u5C42\u3002\u4F60\u5F97\u901A\u8FC7\u4F7F\u7528map\u65B9\u6CD5\u4E00\u5C42\u5C42\u7684\u53BB\u9664\u3002 \u4E3E\u4E2A\u4F8B\u5B50\uFF1Acases/nested.js</p><p>monad\u5B9E\u9645\u4E0A\u4E5F\u662F\u4E00\u79CDfunctor\uFF0C\u4F46\u5B83\u5B9E\u73B0\u4E86join\u63A5\u53E3\u3002 monad \u662F\u53EF\u4EE5\u53D8\u6241\uFF08flatten\uFF09\u7684 pointed functor\u3002</p><p>Maybe.prototype.join = function() { return this.isNothing() ? Maybe.of(null) : this._value }</p><p>// \u8FD9\u91CC\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2Ajoin\u51FD\u6570 function join (m) { return m.join() }</p><p>chain\u51FD\u6570 // chain :: Monad m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b var chain = curry(function(f, m){ return m.map(f).join(); // \u6216\u8005 compose(join, map(f))(m) }); \u901A\u8FC7chain\uFF0C\u6211\u4EEC\u5F88\u5FEB\u8054\u60F3\u5230\u5B83\u5E26\u6765\u7684\u597D\u5904</p><ol><li>\u4E0D\u5305\u542B\u591A\u4F59\u7684join\u8C03\u7528</li><li>\u94FE\u5F0F\u8C03\u7528 querySelector(&quot;input.username&quot;).map(function(uname) { return querySelector(&quot;input.email&quot;).map(function(email) { return &quot;Welcome &quot; + uname.value + &quot; prepare for spam at &quot; + email.value; }); }); // IO(&quot;Welcome Olivia prepare for spam at olivia@tremorcontrol.net&quot;)</li></ol><p>Applicative Functor\uFF08\u51FD\u6570\u5F0F\u7F16\u7A0B\u4E2D\u7684\u51FD\u6570\u90E8\u5206\u8C03\u7528\uFF09</p><p>Container.prototype.ap = function(other_container) { return other_container.map(this.__value); }</p><p>identity.of(1).ap(function (a, b) =&gt; a + b).ap(2)</p><p>ap\u8FD9\u4E2A\u51FD\u6570\u5C06\u4E00\u4E2Afuntor\u7684\u51FD\u6570\u503C\u5E94\u7528\u5230\u53E6\u4E00\u4E2Afunctor\u7684\u503C\u4E0A\u3002\u5982\u679C\u4E00\u4E2A\u5BB9\u5668\u5B9E\u73B0\u4E86ap\u8FD9\u4E2A\u51FD\u6570\uFF0C\u5219\u79F0\u4E4B\u4E3Aapplivative Functor \u770B\u4E0B\u4EE3\u7801code/part2_exercises/exercises/applicative/applicative_exercises.js 38\u884C\u5F00\u59CB</p><p>\u8FD8\u6709\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570\uFF0C\u4F8B\u5982liftA4 const liftA4 = function (f, a, b, c, d) { return a.ap(f).ap(b).ap(c).ap.(d) }</p><p>\u53C2\u8003\u6587\u6863&amp;\u63A8\u8350\u9605\u8BFB\uFF1A \u51FD\u6570\u5F0F\u7F16\u7A0B\u6307\u5317 Structure and Interpretation of Computer Programs \u672C\u4EBA\u535A\u5BA2</p>',81);function o(p,a){return n}var c=e(r,[["render",o]]);export{c as default};
