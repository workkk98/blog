import{e as n}from"./app.3c7f3972.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u4ECEvnode\u5230dom" tabindex="-1"><a class="header-anchor" href="#\u4ECEvnode\u5230dom" aria-hidden="true">#</a> \u4ECEVNode\u5230DOM</h1><p>\u5BFC\u8BFB\uFF1A \u5F00\u53D1\u8005\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\uFF0C\u5B9E\u9645\u4E0A\u5E76\u6CA1\u6709\u64CD\u4F5CDOM\uFF0C\u800C\u662F\u4F7F\u7528\u6A21\u7248\u8BED\u6CD5\u6784\u9020\u4E86render\u51FD\u6570\u3002\u6574\u4E2A\u4ECEVNode\u5230DOM\u7684\u8FC7\u7A0B\u975E\u5E38\u503C\u5F97\u4ED4\u7EC6\u63A8\u6572\u3002</p><h3 id="render\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#render\u51FD\u6570" aria-hidden="true">#</a> render\u51FD\u6570</h3><p>\u5148\u5F15\u5165\u4E24\u4E2A\u65F6\u673A\u70B9\uFF1A</p><ol><li>\u5728\u5F15\u5165Vue\u65F6\uFF0C\u8C03\u7528\u4E86<code>renderMixin</code>\u65B9\u6CD5\u3002\u5B83\u5728Vue\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u94FE\u4E0A\uFF0C\u6DF7\u5165\u4E86\u4E00\u4E9B\u65B9\u6CD5\uFF0C\u6700\u4E3B\u8981\u7684\u4E24\u4E2A\u662F<code>$nextTick</code>\u51FD\u6570\u548C\u4E0B\u65B9\u7684<code>_render</code>\u51FD\u6570\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> _parentVnode <span class="token punctuation">}</span> <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options

    vnode <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_renderProxy<span class="token punctuation">,</span> vm<span class="token punctuation">.</span>$createElement<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="2"><li>\u5728new\u4E00\u4E2AVue\u5B9E\u4F8B\u8FC7\u7A0B\u4E2D\uFF0C\u8FD8\u8C03\u7528\u4E86<code>initRender</code>\u65B9\u6CD5\u3002\u8FD9\u4E2A\u51FD\u6570\uFF0C\u5F80\u5F53\u524D\u7684vue\u5B9E\u4F8B\u91CC\u52A0\u4E86\u4E00\u4E9B\u53D8\u91CF\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// \u5185\u90E8\u8C03\u7528</span>
  vm<span class="token punctuation">.</span><span class="token function-variable function">_c</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">createElement</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token comment">// \u5F00\u53D1\u8005\u8C03\u7528</span>
  vm<span class="token punctuation">.</span><span class="token function-variable function">$createElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">createElement</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E24\u8005\u7684\u533A\u522B\u5C31\u662F\u6700\u540E\u7684\u53C2\u6570\uFF0C\u8FD9\u4E2A\u5F71\u54CD\u5230\u4E86<code>normalizationType</code>\u53D8\u91CF\u3002</p><p>\u5982\u679C\u5F00\u53D1\u8005\u81EA\u5DF1\u5199\u51FA\u4E00\u4E9Brender\u51FD\u6570\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;textNode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5728\u8FD9\u91CC\u6211\u4EEC\u53EF\u4EE5\u5148\u4E0B\u4E2A\u7ED3\u8BBA\uFF0C<code>h</code>\u5B9E\u9645\u4E0A\u5C31\u662F<code>vm.$createElement</code>\uFF0C\u56E0\u4E3A\u5728\u6267\u884C<code>_render</code>\u51FD\u6570\u65F6\uFF0C\u7ED9<code>render</code>\u51FD\u6570\u6CE8\u5165\u7684\u7B2C\u4E00\u4E2A\u5165\u53C2\u5C31\u662F<code>vm.$createElement</code>\u3002</p></div><h3 id="createelement-\u548C-vnode" tabindex="-1"><a class="header-anchor" href="#createelement-\u548C-vnode" aria-hidden="true">#</a> $createElement \u548C VNode</h3><p>$createElement\u51FD\u6570\u6700\u7EC8\u4F1A\u8FD4\u56DE\u4E00\u4E2AVNode\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u662FDOM\u7684\u4E00\u4E2A\u7B80\u7248\uFF0C\u5148\u4E0D\u8868\u3002</p><p>\u5728\u751F\u6210\u6574\u4E2Avnode\u7684\u8FC7\u7A0B\u4E2D\uFF0C<code>$createElement</code>\u3001<code>createElement</code>\u3001<code>_createElement</code>\u8FD9\u51E0\u4E2A\u51FD\u6570\u5148\u540E\u8C03\u7528\u3002 PS: \u7BC7\u5E45\u5173\u7CFB\uFF0C\u5728_createElement\u51FD\u6570\u4E2D\u95F4\u5220\u9664\u4E86\u5F88\u591A\u6E90\u7801\u3002<code>_createElement\u7684\u6E90\u7801\u53EF\u4EE5\u5728/src/core/vdom/create-element.js\u6587\u4EF6\u4E2D\u770B\u5230\u3002</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
vm<span class="token punctuation">.</span><span class="token function-variable function">$createElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">createElement</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createElement</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">context</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">normalizationType</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">alwaysNormalize</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token operator">|</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPrimitive</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    normalizationType <span class="token operator">=</span> children
    children <span class="token operator">=</span> data
    data <span class="token operator">=</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>alwaysNormalize<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    normalizationType <span class="token operator">=</span> <span class="token constant">ALWAYS_NORMALIZE</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">_createElement</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span> normalizationType<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">_createElement</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">context</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  tag<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">|</span> Function <span class="token operator">|</span> Object<span class="token punctuation">,</span>
  data<span class="token operator">?</span><span class="token operator">:</span> VNodeData<span class="token punctuation">,</span>
  children<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  normalizationType<span class="token operator">?</span><span class="token operator">:</span> number</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token operator">|</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Avoid using observed data object as vnode data: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
      <span class="token string">&#39;Always create fresh vnode data objects in each render!&#39;</span><span class="token punctuation">,</span>
      context
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">createEmptyVNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> vnode
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">applyNS</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> ns<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">registerDeepBindings</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> vnode
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createEmptyVNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><ol><li>$createElement\u51FD\u6570\u7684\u5C01\u88C5\u662F\u4E3A\u4E86\u52A8\u6001\u7684\u83B7\u53D6vm\u3002</li><li>createElement\u51FD\u6570\u662F\u4E3A\u4E86\u8BA9\u53C2\u6570\u66F4\u7075\u6D3B\u3002\u5F00\u53D1\u8005\u53EF\u4EE5\u5728\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5199\u5B50\u8282\u70B9\u6570\u7EC4\u3002</li><li>_createElement\u51FD\u6570\u771F\u6B63\u610F\u4E49\u4E0A\u7684\u521B\u5EFA\u4E86vNode\u3002</li></ol><h3 id="children\u89C4\u8303\u5316" tabindex="-1"><a class="header-anchor" href="#children\u89C4\u8303\u5316" aria-hidden="true">#</a> children\u89C4\u8303\u5316</h3><p>\u6211\u4EEC\u77E5\u9053\u5728\u4E00\u4E2A\u7EC4\u4EF6\u4E2D\u5FC5\u4E0D\u53EF\u5C11\u7684\u5C31\u662F\u5B50\u8282\u70B9\u3002\u9996\u5148\u6839\u636E<code>normalizationType</code>\u7684\u4E0D\u540C\uFF0C\u8C03\u7528\u4E86\u4E0D\u540C\u65B9\u6CD5\uFF0C<strong>\u89C4\u8303\u5316children</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">if</span> <span class="token punctuation">(</span>normalizationType <span class="token operator">===</span> <span class="token constant">ALWAYS_NORMALIZE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    children <span class="token operator">=</span> <span class="token function">normalizeChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>normalizationType <span class="token operator">===</span> <span class="token constant">SIMPLE_NORMALIZE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    children <span class="token operator">=</span> <span class="token function">simpleNormalizeChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>normalizeChildren</code>\u88AB\u8C03\u7528\u6709\u4E24\u79CD\u573A\u666F\uFF1A</p><ol><li>\u5F53\u5F00\u53D1\u8005\u4F7F\u7528\u4E86\u624B\u5199\u5F53render\u51FD\u6570\u3002</li><li>\u7F16\u8BD1slot\u3001v-for\u7684\u65F6\u5019\u4F1A\u4EA7\u751F\u5D4C\u5957\u6570\u7EC4\u7684\u60C5\u51B5\u3002</li></ol><p>\u8BE5\u51FD\u6570\u901A\u8FC7for\u5FAA\u73AF\uFF0C\u83B7\u5F97\u5355\u4E2A\u8282\u70B9<code>c</code>\u53D8\u91CF\uFF0C\u7136\u540E\u6309\u7167\u8282\u70B9<code>c</code>\u7684\u7C7B\u578B\u53BB\u5904\u7406\u3002</p><ol><li>\u6570\u7EC4\u7C7B\u578B,\u9012\u5F52\u8C03\u7528normalizeArrayChildren\u51FD\u6570</li><li>\u57FA\u7840\u7C7B\u578B\uFF0C\u901A\u8FC7<code>createTextVNode</code>\u65B9\u6CD5\u8F6C\u6362\u6210VNode\u7C7B\u578B\u3002</li><li>\u53E6\u5916\u90FD\u662Fvnode\u7684\u60C5\u51B5\uFF0C\u7136\u540Ev-for\u751F\u6210\u7684vnode\u4F1A\u5728\u589E\u52A0\u4E2Akey\u7684\u5C5E\u6027 \u6700\u540E\u8FD4\u56DEvnode\u6570\u7EC4\u3002\u4E0B\u9762\u662F\u4F2A\u4EE3\u7801\uFF0C\u4E8B\u5B9E\u4E0A\uFF0Cvue\u8FD8\u8003\u8651\u5230\u5408\u5E76textNode\u8FD9\u7C7B\u7684\u60C5\u51B5\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// </span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// </span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// default key for nested array children (likely generated by v-for)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>children<span class="token punctuation">.</span>_isVList<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token function">isDef</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token function">isUndef</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token function">isDef</span><span class="token punctuation">(</span>nestedIndex<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            c<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">&quot;__vlist&quot;</span> <span class="token operator">+</span> nestedIndex <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;__&quot;</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u6784\u5EFAvnode" tabindex="-1"><a class="header-anchor" href="#\u6784\u5EFAvnode" aria-hidden="true">#</a> \u6784\u5EFAvnode</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> vnode<span class="token punctuation">,</span> ns<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> tag <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> Ctor<span class="token punctuation">;</span>
    ns <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>$vnode <span class="token operator">&amp;&amp;</span> context<span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>ns<span class="token punctuation">)</span> <span class="token operator">||</span> config<span class="token punctuation">.</span><span class="token function">getTagNamespace</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isReservedTag</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// platform built-in elements</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>nativeOn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;The .native modifier for v-on is only valid on components but it was used on &lt;&quot;</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">&quot;&gt;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          context
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      vnode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>
        config<span class="token punctuation">.</span><span class="token function">parsePlatformTagName</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span>
        <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> context
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>data <span class="token operator">||</span> <span class="token operator">!</span>data<span class="token punctuation">.</span>pre<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>Ctor <span class="token operator">=</span> <span class="token function">resolveAsset</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>$options<span class="token punctuation">,</span> <span class="token string">&#39;components&#39;</span><span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// component</span>
      vnode <span class="token operator">=</span> <span class="token function">createComponent</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">,</span> data<span class="token punctuation">,</span> context<span class="token punctuation">,</span> children<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// unknown or unlisted namespaced elements</span>
      <span class="token comment">// check at runtime because it may get assigned a namespace when its</span>
      <span class="token comment">// parent normalizes children</span>
      vnode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>
        tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> children<span class="token punctuation">,</span>
        <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> context
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// direct component options / constructor</span>
    vnode <span class="token operator">=</span> <span class="token function">createComponent</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> data<span class="token punctuation">,</span> context<span class="token punctuation">,</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> vnode
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">applyNS</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> ns<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">registerDeepBindings</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vnode
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createEmptyVNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><ol><li>tag\u53D8\u91CF\u662Fstring\u3002</li></ol><ul><li>\u5185\u7F6E\u7684\u8282\u70B9\uFF0C\u521B\u5EFA\u666E\u901AVNode</li><li>\u6216\u662F\u5DF2\u7ECF\u6CE8\u518C\u7684componentName\uFF0C\u5219\u901A\u8FC7<code>createComponent</code>\u521B\u5EFA\u4E00\u4E2Acomponent Vnode</li><li>\u5176\u4ED6\u5219\u662F\u521B\u5EFA\u4E00\u4E2A\u672A\u77E5\u6807\u7B7E\u7684VNode</li></ul><ol start="2"><li>\u5176\u4ED6\u60C5\u51B5\u4E0B\uFF0C\u5C31\u901A\u8FC7<code>createComponent</code>\u521B\u5EFA\u4E00\u4E2Acomponent Vnode\uFF08\u90A3\u5F53tag\u7C7B\u578B\u662F\u4E00\u4E9Bnull\uFF0C\u6216undefined\u503C\uFF0C\u662F\u5426\u4F1A\u6709\u505A\u5904\u7406\u5462\uFF1F \u7B54\uFF1A\u8FD9\u4E2A\u5728\u5904\u7406\u5B50\u8282\u70B9\u524D\uFF0C\u5C31\u5DF2\u7ECF\u8FD4\u56DEempty VNode\u4E86\u3002\uFF09</li></ol><h3 id="\u6E32\u67D3\u5230dom-update" tabindex="-1"><a class="header-anchor" href="#\u6E32\u67D3\u5230dom-update" aria-hidden="true">#</a> \u6E32\u67D3\u5230DOM(_update)</h3><p>\u518D\u6B21\u56DE\u5230\u5148\u524D\u7684<code>Vue.prototype._render</code>\u51FD\u6570\u3002\u6267\u884C\u5B8Crender\u51FD\u6570\u540E\u83B7\u53D6\u5230\u4E86vnode\uFF0C\u5728\u968F\u540E\u5F97\u6821\u9A8Cvnode\u7684\u683C\u5F0F\u3002\u4F8B\u5982\u4E0D\u80FD\u662F\u6570\u7EC4\u7B49\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0\uFF0C\u6700\u540E_render\u51FD\u6570\u5C31\u8FD4\u56DE\u4E86vnode\u3002</p><p>\u6B64\u65F6\u4E0B\u4E00\u6B65\u5C31\u6267\u884Cvm._update(vm._render(), hydrating);\u540E\u9762\u90A3\u4E2A\u53C2\u6570\u4E0D\u7528\u7BA1\uFF0C\u5B83\u662FSSR\u65F6\u624D\u7528\u5230\u7684\uFF0C\u6B64\u65F6\u5C31\u662F<code>undefined</code>\u3002\u8BE5\u51FD\u6570\u7684\u5B9A\u4E49\u5728<code>src/core/instance/lifecycle.js</code>\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_update</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vnode</span><span class="token operator">:</span> VNode<span class="token punctuation">,</span> hydrating<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">const</span> prevEl <span class="token operator">=</span> vm<span class="token punctuation">.</span>$el
    <span class="token keyword">const</span> prevVnode <span class="token operator">=</span> vm<span class="token punctuation">.</span>_vnode
    <span class="token keyword">const</span> restoreActiveInstance <span class="token operator">=</span> <span class="token function">setActiveInstance</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
    vm<span class="token punctuation">.</span>_vnode <span class="token operator">=</span> vnode
    <span class="token comment">// Vue.prototype.__patch__ is injected in entry points</span>
    <span class="token comment">// based on the rendering backend used.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prevVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// initial render</span>
      vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$el<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* removeOnly */</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// updates</span>
      vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>prevVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">restoreActiveInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// update __vue__ reference</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevEl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      prevEl<span class="token punctuation">.</span>__vue__ <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>__vue__ <span class="token operator">=</span> vm
    <span class="token punctuation">}</span>
    <span class="token comment">// if parent is an HOC, update its $el as well</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$vnode <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>$parent <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>$vnode <span class="token operator">===</span> vm<span class="token punctuation">.</span>$parent<span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>$parent<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span>$el
    <span class="token punctuation">}</span>
    <span class="token comment">// updated hook is called by the scheduler to ensure that children are</span>
    <span class="token comment">// updated in a parent&#39;s updated hook.</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>_update\u51FD\u6570\u4EC5\u670930\u884C\u4EE3\u7801\uFF0C\u6838\u5FC3\u5C31\u662F\u6267\u884C__patch__\u51FD\u6570\u3002**\u89E6\u53D1__patch__\u51FD\u6570\u6709\u4E24\u4E2A\u65F6\u673A\uFF0C\u4E00\u662F\u521D\u6B21\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u4E8C\u662F\u5F53\u6570\u636E\u66F4\u65B0\u901A\u77E5<code>renderWatcher\u66F4\u65B0\u65F6</code>\u3002**\u8FD9\u4E24\u8005\u7684\u4E0D\u540C\u70B9\u5C31\u662F\u662F\u5426\u5B58\u5728<code>preVnode</code>\u3002\u503C\u5F97\u4E00\u63D0\u7684\u662F<code>__patch__</code>\u51FD\u6570\u5728\u4E0D\u540C\u7684\u8FD0\u884C\u73AF\u5883\uFF0C\u4E5F\u662F\u4E0D\u540C\u7684\u3002</p><ul><li>web\u7AEF \uFF08\u5B9A\u4E49\u5728src/platforms/web/runtime/index.js\uFF09</li><li>weex\u7AEF \uFF08\u5B9A\u4E49\u5728src/platforms/weex/runtime/index.js\uFF09</li></ul><p><code>patch</code>\u51FD\u6570\u662F\u901A\u8FC7<code>createPatchFunction</code>\u51FD\u6570\u8FD4\u56DE\u7684\uFF0C<code>createPatchFunction</code>\u51FD\u6570\u603B\u5171\u6709700\u591A\u884C\u4EE3\u7801\uFF0C\u662F\u6211\u76EE\u524D\u4E3A\u6B62\u770B\u5230\u8FC7\u7684\u6700\u957F\u7684\u51FD\u6570\u4E86\u{1F436}\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/platforms/web/runtime/patch.js</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">patch</span><span class="token operator">:</span> Function <span class="token operator">=</span> <span class="token function">createPatchFunction</span><span class="token punctuation">(</span><span class="token punctuation">{</span> nodeOps<span class="token punctuation">,</span> modules <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>nodeOps\u53C2\u6570\u662F\u4E00\u4E9B\u51FD\u6570\uFF0C\u5173\u4E8E\u64CD\u4F5Cdom\u7684\u3002\u800Cmodules\u5219\u662F\u4E00\u4E9B\u6A21\u5757\u7684\u94A9\u5B50\u51FD\u6570\u7684\u5B9E\u73B0\u3002 <code>createPatchFunction</code>\u51FD\u6570\u5B9A\u4E49\u5728<code>src/core/vdom/patch.js</code>\uFF0C\u51FD\u6570\u5185\u90E8\u58F0\u660E\u4E86\u4E86\u5F88\u591A\u65B9\u6CD5\uFF0C\u800C\u8FD9\u4E9B\u51FD\u6570\u7684\u5B9E\u73B0\u5219\u662F\u6765\u81EA\u51FD\u6570\u7684\u53C2\u6570\u4E2D\u7684\u4E00\u4E9BDOM\u64CD\u4F5C\u65B9\u6CD5\u3002\u8FD9\u6837\u533A\u522B\u5316\u662F\u56E0\u4E3A\u5728\u4E0D\u540C\u5E73\u53F0patch\u7684\u601D\u60F3\u662F\u9AD8\u5EA6\u76F8\u4F3C\u7684\uFF0C\u4F46\u662F\u5E73\u53F0\u95F4\u7684\u64CD\u4F5C\u65B9\u6CD5\u5219\u4E0D\u540C\u3002</p><p>\u5728\u56DE\u5230patch\u51FD\u6570\u672C\u8EAB\uFF0C\u5B83\u6709\u56DB\u4E2A\u5165\u53C2\u5206\u522B\u662F\uFF1A</p><ol><li>oldVnode, \u5148\u524D\u7684vnode\u6216\u662F\u771F\u5B9E\u7684DOM\u8282\u70B9\uFF08\u7B2C\u4E00\u6B21\u6E32\u67D3\u65F6\uFF09</li><li>vnode, render\u51FD\u6570\u751F\u6210\u7684vnode</li><li>hydrating, SSR\u76F8\u5173\u7684\u53C2\u6570</li><li>removeOnly, \u63D0\u4F9B\u7ED9<code>transition-group</code>\u7EC4\u4EF6</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// patch\u51FD\u6570\u7247\u6BB5</span>
      <span class="token keyword">const</span> isRealElement <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRealElement <span class="token operator">&amp;&amp;</span> <span class="token function">sameVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// patch existing root node</span>
        <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// mounting to a real element</span>
          <span class="token comment">// check if this is server-rendered content and if we can perform</span>
          <span class="token comment">// a successful hydration.</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> oldVnode<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            oldVnode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span>
            hydrating <span class="token operator">=</span> <span class="token boolean">true</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>hydrating<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
              <span class="token keyword">return</span> oldVnode
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">warn</span><span class="token punctuation">(</span>
                <span class="token string">&#39;The client-side rendered virtual DOM tree is not matching &#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;server-rendered content. This is likely caused by incorrect &#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;HTML markup, for example nesting block-level elements inside &#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;&lt;p&gt;, or missing &lt;tbody&gt;. Bailing hydration and performing &#39;</span> <span class="token operator">+</span>
                <span class="token string">&#39;full client-side render.&#39;</span>
              <span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// either not server-rendered, or hydration failed.</span>
          <span class="token comment">// create an empty node and replace it</span>
          oldVnode <span class="token operator">=</span> <span class="token function">emptyNodeAt</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// replacing existing element</span>
        <span class="token keyword">const</span> oldElm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm
        <span class="token keyword">const</span> parentElm <span class="token operator">=</span> nodeOps<span class="token punctuation">.</span><span class="token function">parentNode</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>

        <span class="token comment">// create new node</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>
          vnode<span class="token punctuation">,</span>
          insertedVnodeQueue<span class="token punctuation">,</span>
          <span class="token comment">// extremely rare edge case: do not insert if old element is in a</span>
          <span class="token comment">// leaving transition. Only happens when combining transition +</span>
          <span class="token comment">// keep-alive + HOCs. (#4590)</span>
          oldElm<span class="token punctuation">.</span>_leaveCb <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> parentElm<span class="token punctuation">,</span>
          nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>\u5728\u521D\u6B21\u6E32\u67D3\u65F6\uFF0C\u4F1A\u8D70\u5165\u5230\u8FD9\u4E2A\u5206\u652F\u3002\u5728\u5224\u65AD\u4E0D\u662F\u670D\u52A1\u5668\u6E32\u67D3\u540E\uFF0C\u5C31\u5C06\u539F\u5148\u7684\u771F\u5B9EDOM\uFF08\u53C2\u6570\u540D\u53EBvnode\uFF09\u66FF\u6362\u6210\u4E00\u4E2A\u7A7Avnode\u3002 \u7136\u540E\u795E\u5947\u7684\u4E8B\u6765\u4E86\uFF0C\u6211\u4EEC\u90FD\u77E5\u9053\u7ED1\u5B9A\u7684\u67D0\u4E2A\u5143\u7D20\u4F8B\u5982<code>&lt;div id=&quot;#app&quot;&gt;&lt;/div&gt;</code>\u6700\u540E\u4F1A\u88AB\u6574\u4E2A\u7EC4\u4EF6\u5143\u7D20\u6240\u53D6\u4EE3\u3002\u5728\u8FD9\u91CC\u5C31\u80FD\u8BF4\u660E\u4E86\uFF0C\u83B7\u53D6\u4E86\u65E7\u5143\u7D20\u548C\u5176\u7956\u5148\u5143\u7D20\u540E\uFF0C\u4E0B\u4E00\u6B65\u5C31\u662F\u5C06\u65E7\u5143\u7D20\u79FB\u9664\uFF0C\u628A\u65B0\u5143\u7D20\u52A0\u5165\u5230\u7236\u5143\u7D20\u4E2D\u3002</p><p>\u63A5\u4E0B\u6765\u7684createElm()\u5C31\u5C24\u5176\u91CD\u8981\u4E86\u3002\u5728\u6B64\u6B21\u8C03\u7528\u4E2D\uFF0C\u4F20\u5165\u4E864\u4E2A\u53C2\u6570\u3002</p><ul><li>vnode</li><li>insertedVnodeQueue: \u7A7A\u6570\u7EC4</li><li>\u7956\u5148\u5143\u7D20</li><li>\u90BB\u5C45\u8282\u70B9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">createElm</span> <span class="token punctuation">(</span>
      <span class="token parameter">vnode<span class="token punctuation">,</span>
      insertedVnodeQueue<span class="token punctuation">,</span>
      parentElm<span class="token punctuation">,</span>
      refElm<span class="token punctuation">,</span>
      nested<span class="token punctuation">,</span>
      ownerArray<span class="token punctuation">,</span>
      index</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ownerArray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// This vnode was used in a previous render!</span>
        <span class="token comment">// now it&#39;s used as a new node, overwriting its elm would cause</span>
        <span class="token comment">// potential patch errors down the road when it&#39;s used as an insertion</span>
        <span class="token comment">// reference node. Instead, we clone the node on-demand before creating</span>
        <span class="token comment">// associated DOM element for it.</span>
        vnode <span class="token operator">=</span> ownerArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cloneVNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      vnode<span class="token punctuation">.</span>isRootInsert <span class="token operator">=</span> <span class="token operator">!</span>nested<span class="token punctuation">;</span> <span class="token comment">// for transition enter check</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">createComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">var</span> data <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
      <span class="token keyword">var</span> children <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
      <span class="token keyword">var</span> tag <span class="token operator">=</span> vnode<span class="token punctuation">.</span>tag<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>pre<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            creatingElmInVPre<span class="token operator">++</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUnknownElement$$1</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> creatingElmInVPre<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">warn</span><span class="token punctuation">(</span>
              <span class="token string">&#39;Unknown custom element: &lt;&#39;</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">&#39;&gt; - did you &#39;</span> <span class="token operator">+</span>
              <span class="token string">&#39;register the component correctly? For recursive components, &#39;</span> <span class="token operator">+</span>
              <span class="token string">&#39;make sure to provide the &quot;name&quot; option.&#39;</span><span class="token punctuation">,</span>
              vnode<span class="token punctuation">.</span>context
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>ns
          <span class="token operator">?</span> nodeOps<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>ns<span class="token punctuation">,</span> tag<span class="token punctuation">)</span>
          <span class="token operator">:</span> nodeOps<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setScope</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* istanbul ignore if */</span>
        <span class="token punctuation">{</span>
          <span class="token function">createChildren</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> children<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">invokeCreateHooks</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token function">insert</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>pre<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          creatingElmInVPre<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isComment<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> nodeOps<span class="token punctuation">.</span><span class="token function">createComment</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> nodeOps<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><p>\u5728\u8FD9\u91CC\u6211\u4EEC\u5148\u5FFD\u7565createComponent\u8FD9\u4E2A\u65B9\u6CD5\u3002</p><ol><li>\u9996\u5148\u521B\u5EFA\u4E86\u8BE5\u8282\u70B9\u7684\u5143\u7D20\uFF0C\u5E76\u9644\u52A0\u5230vnode\u4E0A\u3002 \u901A\u8FC7<code>createElement</code>\u6216<code>createElementNS</code>\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u3002</li><li><code>createChildren()</code> \u6574\u4E2AVNode\u6A21\u578B\u5C31\u662F\u591A\u53C9\u6811\uFF0C\u6240\u4EE5\u51FD\u6570\u5185\u90E8\u5C31\u662F\u6DF1\u5EA6\u904D\u5386\u521B\u5EFA\u5B50\u6811\u3002\u4E2D\u95F4\u518D\u6B21\u8C03\u7528\u4E86createElem\u8FD9\u4E2A\u51FD\u6570\u3002 \u7136\u540Ecomment\u8282\u70B9\u548CtextNode\u8282\u70B9\u6BD4\u8F83\u7279\u6B8A\uFF0C\u662F\u5728\u4E24\u4E2Aelse\u8BED\u53E5\u4E2D\u3002</li><li><code>insert(parentElm, vnode.elm, refElm)</code> \u8FD9\u4E09\u4E2A\u53C2\u6570\u5206\u522B\u662F\u7236\u8282\u70B9\uFF0Cvnode\u521B\u5EFA\u7684\u771F\u5B9Edom\uFF0C\u4EE5\u53CA\u90BB\u5C45\u8282\u70B9\u3002\u8FD9\u4E00\u6B65\u5C06\u771F\u5B9E\u7684dom\u8282\u70B9\u6E32\u67D3\u5230dom\u4E0A\u4E86\u3002</li></ol><p>\u8FD4\u56DE\u5230<code>__patch</code>\u51FD\u6570\u4E2D, \u521B\u5EFA\u5B8C\u5173\u4E8Evnode\u76F8\u5173\u7684\u8282\u70B9\u5E76\u63D2\u5165\u5230\u5BF9\u5E94\u7684\u4F4D\u7F6E\u540E\uFF0C\u5C31\u5F97\u5C06\u539F\u5148\u7684\u8282\u70B9\u79FB\u9664\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// patch\u51FD\u6570\u7247\u6BB5</span>
    <span class="token comment">// destroy old node</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">removeVnodes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>oldVnode<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">removeVnodes</span> <span class="token punctuation">(</span><span class="token parameter">vnodes<span class="token punctuation">,</span> startIdx<span class="token punctuation">,</span> endIdx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> startIdx <span class="token operator">&lt;=</span> endIdx<span class="token punctuation">;</span> <span class="token operator">++</span>startIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> ch <span class="token operator">=</span> vnodes<span class="token punctuation">[</span>startIdx<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">removeAndInvokeRemoveHook</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
          <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// Text node</span>
          <span class="token function">removeNode</span><span class="token punctuation">(</span>ch<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">removeAndInvokeRemoveHook</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> rm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>rm<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> i
      <span class="token keyword">const</span> listeners <span class="token operator">=</span> cbs<span class="token punctuation">.</span>remove<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>rm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// we have a recursively passed down rm callback</span>
        <span class="token comment">// increase the listeners count</span>
        rm<span class="token punctuation">.</span>listeners <span class="token operator">+=</span> listeners
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// directly removing</span>
        rm <span class="token operator">=</span> <span class="token function">createRmCb</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> listeners<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// recursively invoke hooks on child component root node</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">removeAndInvokeRemoveHook</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> rm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>remove<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cbs<span class="token punctuation">.</span>remove<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> rm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>remove<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">i</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> rm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">rm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">removeNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p>\u5728\u672C\u6B21\u8FD9\u4E2A\u6848\u4F8B\u4E2D\uFF0Crm\u53C2\u6570\u4E0D\u5B58\u5728\uFF0C\u6240\u4EE5\u76F4\u63A5\u8D70\u5230\u4E86else\u5206\u652F\u4E2D\uFF0C\u79FB\u9664\u4E86oldVNode\u5BF9\u5E94\u7684DOM\u5143\u7D20\u3002\u6700\u540E\u5728\u6267\u884C\u6BCF\u4E2A\u5143\u7D20\u7684destroy\u7684hook\u6570\u7EC4\uFF0C\u5982\u679Cvnode\u5B58\u5728\u5B50\u8282\u70B9\u5219\u9012\u5F52\u5904\u7406\u3002 \u6700\u540E\u8FD4\u56DEvnode\u5BF9\u5E94\u7684DOM\u8282\u70B9\uFF0Cpatch\u51FD\u6570\u5C31\u57FA\u672C\u6267\u884C\u5B8C\u6BD5\u4E86\u3002</p>`,51);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
